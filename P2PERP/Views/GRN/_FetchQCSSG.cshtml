@model IEnumerable<P2PLibray.GRN.GRN>

<div class="mb-3">
    <label for="txtGRNCodeQC" class="form-label">GRN No:</label>
    <input type="text" id="txtGRNCodeQC" class="form-control d-inline-block w-auto" readonly="readonly" />
</div>

<!--  QC Items Table -->
<div class="table-responsive shadow p-3 bg-white rounded">
    <table id="qcItemsTable" class="table table-bordered table-striped table-hover text-center align-middle">
        <thead class="table-dark">
            <tr>
                <th>Sr. No.</th>
                <th>GRN Item Code</th>
                <th>Item Name</th>
                <th>UOM</th>
                <th>Description</th>
                <th>Quality Required</th>
                <th>Quantity</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var item in Model)
                {
                    <tr data-id="@item.GRNItemCode">
                        <td></td>
                        <td>@item.GRNItemCode</td>
                        <td>@item.ItemName</td>
                        <td>@item.UOMName</td>
                        <td data-bs-toggle="tooltip" title="@item.Description">@item.Description</td>
                        <td>@(item.IsQuality == "1" ? "No" : "Yes")</td>
                        <td>@item.Quantity</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center text-muted">No QC items found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!--  Assign QC -->
<div class="d-flex justify-content-end mt-3 mb-3 gap-2">
    <button type="button" id="btnAssignQC" class="btn btn-success btn-lg px-4">
        <i class="bi bi-check2-circle"></i> Assign QC
    </button>
</div>

<script>
    toastr.options = {
        closeButton: true,
        progressBar: true,
        preventDuplicates: true,
        newestOnTop: true,
        positionClass: "toast-top-right",
        timeOut: "3000"
    };

    function showExportWarning(message = "Please select at least one row to export.") {
        toastr.warning(message, "Warning");
    }
    function showExportInfo(message) { toastr.info(message, "Info"); }

    $(document).ready(function () {
        // Generated date (only date)
        const today = new Date();
        const formattedDate = today.toLocaleDateString();

        // Destroy existing DataTable if reloaded
        if ($.fn.DataTable.isDataTable('#qcItemsTable')) {
            $('#qcItemsTable').DataTable().destroy();
        }

        // DataTable init
        var qcTable = $('#qcItemsTable').DataTable({
            paging: true,
            searching: true,
            ordering: false,
            info: true,
            lengthChange: false,
            pageLength: 10,
            language: { emptyTable: "No QC items available" },
            dom: '<"row mb-3"<"col-md-6"><"col-md-6 d-flex justify-content-end"f>>t<"row mt-3"<"col-md-6"i><"col-md-6 d-flex justify-content-end"p>>',

            // Auto-generate Sr No
            columnDefs: [
                {
                    targets: 0, // Sr. No. column index
                    orderable: false,
                    searchable: false,
                    render: function (data, type, row, meta) {
                        return meta.row + 1; // auto increment row wise
                    }
                }
            ]
        });

        // Assign QC button click using SweetAlert
        $('#btnAssignQC').on('click', function () {
            let grnCode = $('#txtGRNCodeQC').val();

            // Collect ALL item codes from the DataTable
            let allItems = [];
            $('#qcItemsTable tbody tr').each(function () {
                let itemId = $(this).data('id');
                if (itemId) allItems.push(itemId);
            });

            if (allItems.length === 0) {
                Swal.fire({
                    icon: 'warning',
                    title: 'No QC items found to assign',
                    showConfirmButton: true
                });
                return;
            }

            $.ajax({
                url: '/GRN/AssignQCSSG',
                type: 'POST',
                traditional: true,
                data: { GRNItemCodes: allItems, GRNCode: grnCode },
                success: function (res) {
                    if (res.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'QC Assigned Successfully!',
                            text: res.message,
                            timer: 1500,
                            showConfirmButton: false
                        }).then(() => {
                            $('#grnDetailsModal').modal('hide');

                            if ($.fn.DataTable.isDataTable('#grnTable')) {
                                $('#grnTable').DataTable().ajax.reload(null, false);
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: res.message
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Something went wrong while assigning QC.'
                    });
                }
            });
        });

        // Re-initialize tooltips after DataTable draw
        $('#qcItemsTable').on('draw.dt', function () {
            // Dispose all existing tooltips first
            $('[data-bs-toggle="tooltip"]').each(function () {
                let tooltipInstance = bootstrap.Tooltip.getInstance(this);
                if (tooltipInstance) tooltipInstance.dispose();
            });

            // Re-initialize tooltips
            $('[data-bs-toggle="tooltip"]').tooltip({
                template: '<div class="tooltip" role="tooltip">' +
                    '<div class="tooltip-arrow"></div>' +
                    '<div class="tooltip-inner" style="background-color:black; color:white;"></div>' +
                    '</div>'
            });
        });


        // Initial call for first page
        $('#qcItemsTable').trigger('draw.dt');
    });
</script>
